language: python

matrix:
  include:
    - name: "Ubuntu14.04 Py27"
      dist: trusty
      python: "2.7"
    - name: "Ubuntu16.04 Py35"
      dist: xenial
      python: "3.5"
    - name: "Ubuntu16.04 Py36, plain install"
      dist: xenial
      python: "3.6"
      env:
        - CHAINERUI_PLAIN_INSTALL=1
    - name: "Ubuntu16.04 Py36"
      dist: xenial
      python: "3.6"
      env:
        - CHAINERUI_COVERAGE_REPORT=1
        - CHAINERUI_DEPLOY_JOB=1

services:
  - docker

notifications:
  email: false

sudo: false

before_install:
  - |
    if [[ $CHAINERUI_PLAIN_INSTALL == 1 ]]; then
      export CHAINERUI_TEST_DEPENDS="[test-ci-plain]";
    else
      export CHAINERUI_TEST_DEPENDS="[test-ci]";
    fi
  - npm install -g npm@6
  - npm -v

install:
  - pushd frontend
  - npm install && npm run build -- --progress=false --profile=false
  - popd
  - pip install -e .$CHAINERUI_TEST_DEPENDS

script:
  # python style check
  - flake8
  - autopep8 -r . --global-config .pep8 --diff --exit-code
  # frontend style check
  - pushd frontend
  - npm run lint
  - popd
  # chainerui install test
  - chainerui db create
  - chainerui db upgrade
  - chainerui server -p 5051 &
  - sleep 4
  - curl -f http://127.0.0.1:5051/
  - pytest --cov=chainerui

after_success:
  - if [[ $CHAINERUI_COVERAGE_REPORT == 1 ]]; then COVERALLS_TOKEN=$COVERALLS_TOKEN coveralls; fi

deploy:
  - provider: pypi
    user: $PYPI_MAINTAINER_NAME
    password: $PYPI_MAINTAINER_PASS
    on:
      tags: true
      condition: $CHAINERUI_DEPLOY_JOB == 1
    allow_failure: false
    skip_cleanup: true
  - provider: script
    script: bash .travis/docker_push.sh
    on:
      tags: true
      condition: $CHAINERUI_DEPLOY_JOB == 1
    allow_failure: false
    skip_cleanup: true
